#!/bin/bash

# Program 1: Stats

# Usage
# stats { -rows | -cols } [input_file]

# Citations:
# The Linux Command Line (TCLC)
# Redirect to standard out using >&2 at end of echo: TLCL Page 388 

# GLOBALS
read_from_file=false

# CONSTANTS
USAGE_STRING='{-rows | -cols} [input_file]'

# note: $# is the number of arguments
# >&2 redirect to standard error


# Return 0 if number of arguments is 0 or 1, else print usage message and exit
validate_num_args () {
	echo "Arguments inside validate: $1"
	if [[ "$1" == 1 ]]; then
		set_interactive_mode
	elif [[ "$1" == 2 ]]; then
		return 0  # success
	else
		print_usage
	fi
		return 0
}
return 0

# Return 0 (true) if argument 1 is valid format -r* or -c* regex
# If it does not match, exits with 
# Citation: Use of =~ to test against a regex- TLCL Page 389
validate_arg1 () {
	echo "called validate_arg1 with: $1"
	if [[ "$1" =~ ^-r.*$ ]]; then
		echo "Matched regex with -r"
		set_interactive_mode true
		return 0  # true
	elif [[ "$1" =~ ^-c.*$ ]]; then
		echo "Matched regex with -c"
		set_interactive_mode true
		return 0  # true
	else
		echo "Regex not matched"
		return 1 # false
	fi
}


set_interactive_mode () {
	echo 'called set_interactive_mode()'
	return
}



print_usage () {
	echo "Usage: $0 $USAGE_STRING" >&2 
	exit 1
}


# main
echo "Number of arguments: $#"
validate_num_args $#
validate_arg1 $1
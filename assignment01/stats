#!/bin/bash

# Program 1: Stats

# Usage
# stats { -rows | -cols } [input_file]

# Citations:
# The Linux Command Line (TCLC)
# Redirect to standard out using >&2 at end of echo: TLCL Page 388 

# GLOBALS
interactive_mode=false
cols_mode=false

# CONSTANTS
USAGE_STRING='{-rows | -cols} [input_file]'
SCRIPT_NAME='stats'

# note: $# is the number of arguments
# >&2 redirect to standard error


# Return 0 if number of arguments is 0 or 1, else print usage message and exit
validate_num_args () {
	# echo "Arguments inside validate: $1"
	if [[ "$1" == 1 ]]; then
		set_interactive_mode true
	elif [[ "$1" == 2 ]]; then
		return 0  # success
	else
		print_usage
	fi
		return 0
}


# Return 0 (true) if argument 1 is valid format -r* or -c* regex
# If it does not match, exits with usage message
# Citation: Use of =~ to test against a regex- TLCL Page 389
validate_arg1 () {
	# echo "called validate_arg1 with: $1"
	if [[ "$1" =~ ^-r.*$ ]]; then
		# echo "Matched regex with -r"
		set_cols_mode false
		return 0  # true
	elif [[ "$1" =~ ^-c.*$ ]]; then
		# echo "Matched regex with -c"
		set_cols_mode true
		return 0  # true
	else
		echo "Invalid syntax" >&2 # TODO: Print more appropriate error message
		print_usage
	fi
}


set_interactive_mode () {
	# echo 'called set_interactive_mode()'
	interactive_mode=$1
	return
}

set_cols_mode () {
	cols_mode=$1;
	echo "Calculating on columns: $cols_mode"
	return
}

read_from_file () {
	echo 'Hello from read_from_file()'
	if [[ ! -e "$1" ]]; then
		echo "File '$1' does not exist" >&2
	elif [[ ! -r "$1" ]]; then
		echo "File '$1' not readable" >&2
	elif [[ -f "$1" ]]; then
		# File exists, try to open it and process the data
		echo 'File exists, attempting to open and parse.'
	fi
	return
}

# Displays usage to user
print_usage () {
	echo "$SCRIPT_NAME: Usage: $SCRIPT_NAME $USAGE_STRING" >&2 
	exit 1
}


# main

# Put the arguments into more meaningful variable names
num_args=$#
process_mode=$1
file_name=$2

# Validate the command line arguments and attempt to open file
# echo "Number of arguments: $#"
validate_num_args $num_args
validate_arg1 $process_mode
# echo "interactive mode: $interactive_mode"

# If interactive mode is off, attempt to open file
if [ interactive_mode ] ; then
	read_from_file $file_name
fi